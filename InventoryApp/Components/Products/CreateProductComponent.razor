@using Entities;
@using Business;
@inject ProductBusiness productB;
@inject CategoryBusiness categoriesB;
@inject NavigationManager navManager;


<div class="container-fluid">
    <EditForm Model="product">
        <div class="form-group">
            <label>Referencia:</label>
            <InputText class="form-control" @bind-Value="product.ProductId" />
        </div>
        <div class="form-group">
            <label>Nombre:</label>
            <InputText class="form-control" @bind-Value="product.ProductName" />
        </div>
        <div class="form-group">
            <label>Descripción:</label>
            <InputTextArea class="form-control" @bind-Value="product.ProductDescription" />
        </div>
        <div class="form-group">
            <label>Categoria</label>
            <InputSelect  class="form-control" @bind-Value="product.CategoryId">
                @foreach (var category in categories)
                {
                    <option value="@category.CategoryId">
                        @category.CategoryName
                    </option>
                }
            </InputSelect>
        </div>
        <input type="button" value="Add" @onclick="handleClick" />
    </EditForm>
</div>

@code {
    ProductEntity product = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync()
    {
        categories = categoriesB.GetItems();
    }
    private void handleClick()
    {
        productB.CreateItem(product);
        navManager.NavigateTo("/product");
    }
}
